cmake_minimum_required(VERSION 3.13)
project(VMAF)

set(CMAKE_CXX_FLAGS_DEBUG "-g3 -O0 -fno-omit-frame-pointer")

include(ExternalProject)
IF(CMAKE_BUILD_TYPE MATCHES Release)
    ExternalProject_Add(vmaf_repo
            PREFIX "@CMAKE_BINARY_DIR@"
            URL "@CMAKE_SOURCE_DIR@/external/vmaf/libvmaf"
            CONFIGURE_COMMAND
            meson setup
            --prefix=@CMAKE_BINARY_DIR@
            --libdir=lib
            --default-library static
            --buildtype=release
            -Denable_asm=true
            #-optimization=3
            "@CMAKE_SOURCE_DIR@/external/vmaf/libvmaf"
            "."
            BUILD_COMMAND ninja -C "."
            INSTALL_DIR @CMAKE_BINARY_DIR@
            INSTALL_COMMAND ninja install -C "."
    )
ELSE()
    ExternalProject_Add(vmaf_repo
            PREFIX "@CMAKE_BINARY_DIR@"
            URL "@CMAKE_SOURCE_DIR@/external/vmaf/libvmaf"
            CONFIGURE_COMMAND
            env "CFLAGS=${CMAKE_CXX_FLAGS_DEBUG}" meson setup
            --prefix=@CMAKE_BINARY_DIR@
            --libdir=lib
            --default-library static
            --buildtype=debug
            -Denable_asm=false
            #--optimization=g
            "@CMAKE_SOURCE_DIR@/external/vmaf/libvmaf"
            "."
            BUILD_COMMAND ninja -C "."
            INSTALL_DIR @CMAKE_BINARY_DIR@
            INSTALL_COMMAND ninja install -C "."
     )
ENDIF()
